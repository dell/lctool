##############################################################################
# Copyright (c) 2011, Dell Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Dell, Inc. nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL Dell, Inc. BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
##############################################################################
# Version 1.0

USE CASE FOR BIOS CONFIGURATION & MANAGEMENT

A) List BIOS Inventory
   The BIOS Inventory contains the following attributes: DCIM_BIOSEnumeration,
   DCIM_BIOSInteger and DCIM_BIOSString

   To list all of the above
   Run: ./ws-attributelist.sh bios
   To list Iniviudal groups
   Run: ./ws-biosinvent.sh bstr  for DCIM_BIOSString  (String Inventory)
        ./ws-biosinvent.sh bint  for DCIM_BIOSInteger (Integer Inventory)
        ./ws-biosinvent.sh benum for DCIM BIOSEnumeration

B) GET BIOS Instance

   Get one particular instance of the BIOSEnumeration, instead of all instances
   as mentioned above.
   First list all the instances of BIOSEnumeration & then pick one instance id.
   Run: ./ws-biosinvent.sh benum
   Select an instance id: BIOS.Setup.1-1:PwrButton
   Now you can get the details for the above id
   Run: ./ws-attributeget.sh DCIM_BIOSEnumeration BIOS.Setup.1-1:PwrButton

C) Set BIOS BootMode

   The SetAttribute method can be used to set the BootMode.

   1) First list all the instances of BIOSEnumeration and look for the Instance
      which has the Atrribute Name: BootMode
      Run: ./ws-biosinvent.sh benum for DCIM BIOSEnumeration
      Note down the FQDD. Eg: BIOS.Setup.1-1
  
   2) Set the Attribute value to the required one. Eg: Uefi
      The accepted values are listed in the PossibleValue field for the
      enumerated attribute.

      The attributes that can be changed from the ./ws-biosinvent.sh benum 
      enumeration will have the IsReadonly field labeled as "false". 
      Run: ./ws-attributeset.sh bios BIOS.Setup.1-1 BootMode=Uefi

   3) Once the attribute is set, the value goes to pending and it must be
      applied by using the CreateTargetedConfigJob() method. This method 
      creates the job  to apply the pending value and also has the option to
      create and schedule a Reboot job.
      To confirm the pending value
      Run: ./ws-attributeget.sh DCIM_BIOSEnumeration BIOS.Setup.1-1:BootMode
      To create & schedule the job
      Run: ./ws-targetedjob.sh DCIM_BIOSService BIOS.Setup.1-1
      This will return a Job id of the form (JID_XXXXXXXXXXXX) and also run the
      Reboot Job

   4) Check the status of job by enumerating the DCIM_LifeCycleJob Job instance
      For an interactive update (The script will continue to run, until you
      specify it to stop) on your job status you can:
      a) Run: ./ws-jobget.sh JID_XXXXXXXXXXXX

      For just the current status:
      b) Run: ./ws-attributeget.sh DCIM_LifecycleJob JID_XXXXXXXXXXXX

   5) Once the system is rebooted, Check the Attribute again to see that the
      current value for the attribute is set to the the values given in step 2.
      Run: ./ws-attributeget.sh DCIM_BIOSEnumeration BIOS.Setup.1-1:BootMode 
           The CurrentValue should show Uefi.

   6) Also confirm the setting by checking the BIOS(F2)


D) Set Multiple BIOS Attributes

   This is similar to item C except setting multiple parameters.

   For Example: we can set attribute BootMode and BootSeqRetry

   Repeat the same steps as in C except in step 2
   Run: ./ws-attributeset.sh bios BIOS.Setup.1-1 BootMode=Bios 
        BootSeqRetry=Disabled

E) Troubleshoot
   1) To clean everything and rerun desired process execute the following scripts.
        a) clear all jobs.
           Run: ./ws-jobclearall.sh
        b) create a new environment session to run scripts.
           Run: . ./sourceme-cleanup
           Run: . ./sourceme-first
           More information of clearing the environment can be found in the NOTES_SETUP
   

[End of Content]
